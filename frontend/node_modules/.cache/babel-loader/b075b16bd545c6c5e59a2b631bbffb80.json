{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { detailsProduct } from '../Actions/productActions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Axios from 'axios';\nimport { listProducts } from '../Actions/productActions';\nexport default function ProductScreen(props) {\n  _s();\n\n  const [qty, setQty] = useState(1); // const products = data.products;\n\n  const id = props.match.params.id;\n  const dispatch = useDispatch();\n  const productList = useSelector(state => state.productList);\n  const {\n    products\n  } = productList;\n  useEffect(() => {\n    dispatch(listProducts());\n  }, [dispatch]);\n  console.log(products);\n\n  if (true) {\n    return null;\n  }\n\n  const addToCartHandler = () => {\n    props.history.push(`/cart/${id}?qty=${qty}`);\n  };\n  /*return ( <\r\n      div >\r\n        <\r\n      Link to=\"/\" > Back to result < /Link> <\r\n      div className=\"row\" > < div className=\"col-2\" > < img src={product.image}\r\n              /> < /\r\n      div > < div className=\"col-1\" > < ul > < li > < h1 > {\r\n                      product.name\r\n                    } < /\r\n      h1 > < /li > <li>{product.price}$ < /li > < li > {\r\n                        } {\r\n                              product.nreviews\r\n                          }\r\n                          reviews <\r\n      div className=\"rating\" >\r\n                              <\r\n      span > <\r\n      i className={\r\n                                          product.rating >=\r\n                                              1 ?\r\n                                              'fa fa-star' : product.rating >= .5 ?\r\n                                                  'fa fa-star-half-o' : 'fa fa-star-o'\r\n                                      } > < /i> <\r\n      i className={\r\n                                              product.rating >=\r\n                                                  2 ?\r\n                                                  'fa fa-star' : product.rating >= 1.5 ?\r\n                                                      'fa fa-star-half-o' : 'fa fa-star-o'\r\n                                          } > < /i> <\r\n      i className={\r\n                                                  product.rating >= 3 ?\r\n                                                      'fa fa-star' : product.rating >=\r\n                                                          2.5 ?\r\n                                                          'fa fa-star-half-o' : 'fa fa-star-o'\r\n                                              } > < /i> <\r\n      i className={\r\n                                                      product.rating >= 4 ?\r\n                                                          'fa fa-star' : product.rating >= 3.5 ?\r\n                                                              'fa fa-star-half-o' : 'fa fa-star-o'\r\n                                                  } > < /i> <\r\n      i className={\r\n                                                          product.rating >= 5 ?\r\n                                                              'fa fa-star' : product.rating >= 4.5 ?\r\n                                                                  'fa fa-star-half-o' : 'fa fa-star-o'\r\n                                                      } > < /i> < /\r\n      span >\r\n                                                        <\r\n      /div>\r\n                                                        <\r\n      /li > < li >{product.description} < /li > < /ul > < /div > < div className=\"col-1\" > < div className=\"card card-body\" > < ul > < li > < div className=\"row\" > <\r\n      div > Price < /div> <\r\n      div className=\"price\" > {product.price}\r\n                                                              $ < /div> < /\r\n      div > < /li > < li >   <div className=\"row\"> <\r\n      div > status < /div> <\r\n      div className=\"status\" >\r\n                                                                        <\r\n      div > {\r\n                                                                              product.countInStock > 0 ? (< span className=\"success\" > In stock < /span>): ( < span className=\"error\" > Unavailable< /span > )\r\n      }\r\n                                                                                    <\r\n      /div>\r\n  \r\n                                                                                    <\r\n      /div> < /\r\n      div > < /li >\r\n  \r\n                                                                                    {\r\n                                                                                      product.countInStock > 0 && ( <\r\n              >\r\n                                                                                          <\r\n              li >\r\n                                                                                              <\r\n              div className=\"row\" >\r\n                                                                                                  <\r\n              div > Qty < /div> <\r\n              div >\r\n                                                                                                          <\r\n              select value={qty}\r\n                                                                                                              onChange={\r\n                                                                                                                  (e) => setQty(e.target.value)\r\n                                                                                                              } > {\r\n                                                                                                                  [...Array(product.countInStock).keys()].map(\r\n                                                                                                                      (x) => (<\r\n                          option key={x + 1}\r\n                                                                                                                          value={x + 1} > {x + 1} <\r\n                          /option>\r\n                                                                                                                          )\r\n                                                                                                                          )\r\n              } <\r\n              /select> < /\r\n              div > <\r\n              /div> < /\r\n              li > <\r\n              li >\r\n                                                                                                                              <\r\n              button onClick={addToCartHandler}\r\n                                                                                                                                  className=\"primary block\" >\r\n                                                                                                                                  Add to Cart <\r\n              /button> < /\r\n              li > <\r\n              />\r\n                                                                                                                                  )\r\n      }\r\n  \r\n                                                                                                                                  <\r\n        /ul > < /\r\n      div > < /div >\r\n                                                                                                                                      <\r\n      /div >< /div > */\n\n}\n\n_s(ProductScreen, \"O6hqY99hMHtHVMNipDu5jWFFTpQ=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ProductScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductScreen\");","map":{"version":3,"sources":["C:/Users/hamad/Desktop/E-commerce/frontend/src/screens/ProductScreen.js"],"names":["React","Link","useParams","useEffect","useState","detailsProduct","useDispatch","useSelector","Axios","listProducts","ProductScreen","props","qty","setQty","id","match","params","dispatch","productList","state","products","console","log","addToCartHandler","history","push"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,2BAA7B;AAEA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AACzC,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBT,QAAQ,CAAC,CAAD,CAA9B,CADyC,CAIzC;;AACA,QAAMU,EAAE,GAAGH,KAAK,CAACI,KAAN,CAAYC,MAAZ,CAAmBF,EAA9B;AAEA,QAAMG,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAMY,WAAW,GAAGX,WAAW,CAAEY,KAAD,IAAWA,KAAK,CAACD,WAAlB,CAA/B;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAeF,WAArB;AACAf,EAAAA,SAAS,CAAC,MAAM;AAGZc,IAAAA,QAAQ,CAACR,YAAY,EAAb,CAAR;AACH,GAJQ,EAIN,CAACQ,QAAD,CAJM,CAAT;AAOJI,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AAGI,MAAI,IAAJ,EAAU;AACN,WAAO,IAAP;AACH;;AAGD,QAAMG,gBAAgB,GAAG,MAAM;AAC3BZ,IAAAA,KAAK,CAACa,OAAN,CAAcC,IAAd,CAAoB,SAAQX,EAAG,QAAOF,GAAI,EAA1C;AACH,GAFD;AAQA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAuBC;;GArKuBF,a;UAOHJ,W,EACGC,W;;;KARAG,a","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\nimport { detailsProduct } from '../Actions/productActions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Axios from 'axios';\r\nimport { listProducts } from '../Actions/productActions';\r\n\r\nexport default function ProductScreen(props) {\r\n    const [qty, setQty] = useState(1);\r\n\r\n\r\n    // const products = data.products;\r\n    const id = props.match.params.id\r\n\r\n    const dispatch = useDispatch();\r\n    const productList = useSelector((state) => state.productList);\r\n    const { products } = productList;\r\n    useEffect(() => {\r\n\r\n\r\n        dispatch(listProducts());\r\n    }, [dispatch]);\r\n\r\n\r\nconsole.log(products)\r\n\r\n    \r\n    if (true) {\r\n        return null;\r\n    }\r\n\r\n\r\n    const addToCartHandler = () => {\r\n        props.history.push(`/cart/${id}?qty=${qty}`);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    /*return ( <\r\n        div >\r\n\r\n        <\r\n        Link to=\"/\" > Back to result < /Link> <\r\n        div className=\"row\" > < div className=\"col-2\" > < img src={product.image}\r\n                /> < /\r\n        div > < div className=\"col-1\" > < ul > < li > < h1 > {\r\n                        product.name\r\n\r\n                    } < /\r\n        h1 > < /li > <li>{product.price}$ < /li > < li > {\r\n\r\n                        } {\r\n                                product.nreviews\r\n                            }\r\n                            reviews <\r\n        div className=\"rating\" >\r\n                                <\r\n        span > <\r\n        i className={\r\n                                            product.rating >=\r\n                                                1 ?\r\n                                                'fa fa-star' : product.rating >= .5 ?\r\n                                                    'fa fa-star-half-o' : 'fa fa-star-o'\r\n                                        } > < /i> <\r\n        i className={\r\n                                                product.rating >=\r\n                                                    2 ?\r\n                                                    'fa fa-star' : product.rating >= 1.5 ?\r\n                                                        'fa fa-star-half-o' : 'fa fa-star-o'\r\n                                            } > < /i> <\r\n        i className={\r\n                                                    product.rating >= 3 ?\r\n                                                        'fa fa-star' : product.rating >=\r\n                                                            2.5 ?\r\n                                                            'fa fa-star-half-o' : 'fa fa-star-o'\r\n                                                } > < /i> <\r\n        i className={\r\n                                                        product.rating >= 4 ?\r\n                                                            'fa fa-star' : product.rating >= 3.5 ?\r\n                                                                'fa fa-star-half-o' : 'fa fa-star-o'\r\n                                                    } > < /i> <\r\n        i className={\r\n                                                            product.rating >= 5 ?\r\n                                                                'fa fa-star' : product.rating >= 4.5 ?\r\n                                                                    'fa fa-star-half-o' : 'fa fa-star-o'\r\n                                                        } > < /i> < /\r\n        span >\r\n\r\n                                                        <\r\n        /div>\r\n\r\n                                                        <\r\n        /li > < li >{product.description} < /li > < /ul > < /div > < div className=\"col-1\" > < div className=\"card card-body\" > < ul > < li > < div className=\"row\" > <\r\n        div > Price < /div> <\r\n        div className=\"price\" > {product.price}\r\n                                                                $ < /div> < /\r\n        div > < /li > < li >   <div className=\"row\"> <\r\n        div > status < /div> <\r\n        div className=\"status\" >\r\n\r\n                                                                        <\r\n        div > {\r\n                                                                                product.countInStock > 0 ? (< span className=\"success\" > In stock < /span>): ( < span className=\"error\" > Unavailable< /span > )\r\n        }\r\n\r\n                                                                                    <\r\n        /div>\r\n\r\n\r\n\r\n\r\n                                                                                    <\r\n        /div> < /\r\n        div > < /li >\r\n\r\n\r\n\r\n\r\n                                                                                    {\r\n                                                                                        product.countInStock > 0 && ( <\r\n                >\r\n                                                                                            <\r\n                li >\r\n                                                                                                <\r\n                div className=\"row\" >\r\n                                                                                                    <\r\n                div > Qty < /div> <\r\n                div >\r\n                                                                                                            <\r\n                select value={qty}\r\n                                                                                                                onChange={\r\n                                                                                                                    (e) => setQty(e.target.value)\r\n                                                                                                                } > {\r\n                                                                                                                    [...Array(product.countInStock).keys()].map(\r\n                                                                                                                        (x) => (<\r\n                            option key={x + 1}\r\n                                                                                                                            value={x + 1} > {x + 1} <\r\n                            /option>\r\n                                                                                                                            )\r\n                                                                                                                            )\r\n                } <\r\n                /select> < /\r\n                div > <\r\n                /div> < /\r\n                li > <\r\n                li >\r\n                                                                                                                                <\r\n                button onClick={addToCartHandler}\r\n                                                                                                                                    className=\"primary block\" >\r\n                                                                                                                                    Add to Cart <\r\n                /button> < /\r\n                li > <\r\n                />\r\n                                                                                                                                    )\r\n        }\r\n\r\n\r\n\r\n                                                                                                                                    <\r\n\r\n        /ul > < /\r\n        div > < /div >\r\n\r\n\r\n                                                                                                                                    <\r\n        /div >< /div > */\r\n\r\n\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}