{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hamad\\\\Desktop\\\\E-commerce\\\\frontend\\\\src\\\\screens\\\\RegisterScreen.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass RegisterScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fields: {},\n      errors: {}\n    };\n  }\n\n  handleValidation() {\n    let fields = this.state.fields;\n    let errors = {};\n    let formIsValid = true; //Name\n\n    if (!fields[\"name\"]) {\n      formIsValid = false;\n      errors[\"name\"] = \"Cannot be empty\";\n    }\n\n    if (typeof fields[\"name\"] !== \"undefined\") {\n      if (!fields[\"name\"].match(/^[a-zA-Z]+$/)) {\n        formIsValid = false;\n        errors[\"name\"] = \"Only letters\";\n      }\n    } //Email\n\n\n    if (!fields[\"email\"]) {\n      formIsValid = false;\n      errors[\"email\"] = \"Cannot be empty\";\n    }\n\n    if (typeof fields[\"email\"] !== \"undefined\") {\n      let lastAtPos = fields[\"email\"].lastIndexOf(\"@\");\n      let lastDotPos = fields[\"email\"].lastIndexOf(\".\");\n\n      if (!(lastAtPos < lastDotPos && lastAtPos > 0 && fields[\"email\"].indexOf(\"@@\") == -1 && lastDotPos > 2 && fields[\"email\"].length - lastDotPos > 2)) {\n        formIsValid = false;\n        errors[\"email\"] = \"Email is not valid\";\n      }\n    }\n\n    this.setState({\n      errors: errors\n    });\n    return formIsValid;\n  }\n\n  contactSubmit(e) {\n    e.preventDefault();\n\n    if (this.handleValidation()) {\n      alert(\"Form submitted\");\n    } else {\n      alert(\"Form has errors.\");\n    }\n  }\n\n  handleChange(field, e) {\n    let fields = this.state.fields;\n    fields[field] = e.target.value;\n    this.setState({\n      fields\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        onSubmit: this.contactSubmit.bind(this),\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" create account \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"User name \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"username\",\n            placeholder: \"enter username\",\n            required: true,\n            onChange: this.handleChange.bind(this, \"name\"),\n            value: this.state.fields[\"name\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), \"    \", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"red\"\n            },\n            children: this.state.errors[\"name\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 19\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 40\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email address \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            placeholder: \"enter email\",\n            onChange: this.handleChange.bind(this, \"email\"),\n            value: this.state.fields[\"email\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"red\"\n            },\n            children: [\" \", this.state.errors[\"email\"], \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            placeholder: \"enter password\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 20\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"primary\",\n            type: \"submit\",\n            children: \" Register \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Already have an account ? \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/signin\",\n              children: \" Sign In \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 39\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 18\n    }, this);\n  }\n\n}\n\nexport default RegisterScreen;","map":{"version":3,"sources":["C:/Users/hamad/Desktop/E-commerce/frontend/src/screens/RegisterScreen.js"],"names":["React","Link","RegisterScreen","Component","constructor","props","state","fields","errors","handleValidation","formIsValid","match","lastAtPos","lastIndexOf","lastDotPos","indexOf","length","setState","contactSubmit","e","preventDefault","alert","handleChange","field","target","value","render","bind","color"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nclass RegisterScreen\r\nextends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            fields: {},\r\n            errors: {},\r\n        };\r\n    }\r\n\r\n    handleValidation() {\r\n        let fields = this.state.fields;\r\n        let errors = {};\r\n        let formIsValid = true;\r\n\r\n        //Name\r\n        if (!fields[\"name\"]) {\r\n            formIsValid = false;\r\n            errors[\"name\"] = \"Cannot be empty\";\r\n        }\r\n\r\n        if (typeof fields[\"name\"] !== \"undefined\") {\r\n            if (!fields[\"name\"].match(/^[a-zA-Z]+$/)) {\r\n                formIsValid = false;\r\n                errors[\"name\"] = \"Only letters\";\r\n            }\r\n        }\r\n\r\n        //Email\r\n        if (!fields[\"email\"]) {\r\n            formIsValid = false;\r\n            errors[\"email\"] = \"Cannot be empty\";\r\n        }\r\n\r\n        if (typeof fields[\"email\"] !== \"undefined\") {\r\n            let lastAtPos = fields[\"email\"].lastIndexOf(\"@\");\r\n            let lastDotPos = fields[\"email\"].lastIndexOf(\".\");\r\n\r\n            if (!(\r\n                    lastAtPos < lastDotPos &&\r\n                    lastAtPos > 0 &&\r\n                    fields[\"email\"].indexOf(\"@@\") == -1 &&\r\n                    lastDotPos > 2 &&\r\n                    fields[\"email\"].length - lastDotPos > 2\r\n                )) {\r\n                formIsValid = false;\r\n                errors[\"email\"] = \"Email is not valid\";\r\n            }\r\n        }\r\n\r\n        this.setState({ errors: errors });\r\n        return formIsValid;\r\n    }\r\n\r\n    contactSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        if (this.handleValidation()) {\r\n            alert(\"Form submitted\");\r\n        } else {\r\n            alert(\"Form has errors.\");\r\n        }\r\n    }\r\n\r\n    handleChange(field, e) {\r\n        let fields = this.state.fields;\r\n        fields[field] = e.target.value;\r\n        this.setState({ fields });\r\n    }\r\n\r\n    render() {\r\n\r\n        return ( <\r\n            div >\r\n\r\n            <\r\n            form className = \"form\"\r\n            onSubmit = { this.contactSubmit.bind(this) } >\r\n            <\r\n            h1 > create account < /h1> <\r\n            div > <\r\n            label htmlFor = \"username\" >\r\n            User name <\r\n            /label>\r\n\r\n            <\r\n            input type = \"text\"\r\n            id = \"username\"\r\n            placeholder = \"enter username\"\r\n            required\r\n\r\n            onChange = { this.handleChange.bind(this, \"name\") }\r\n            value = { this.state.fields[\"name\"] }\r\n\r\n\r\n\r\n\r\n            />    <span style={{ color: \"red\" }}>{this.state.errors[\"name\"]}</span > <\r\n            /\r\n            div >\r\n\r\n            <\r\n            div > <\r\n            label htmlFor = \"email\" >\r\n            Email address <\r\n            /label>\r\n\r\n            <\r\n            input type = \"email\"\r\n            id = \"email\"\r\n            placeholder = \"enter email\"\r\n            onChange = { this.handleChange.bind(this, \"email\") }\r\n            value = { this.state.fields[\"email\"] }\r\n\r\n\r\n            /\r\n\r\n            >\r\n\r\n\r\n            <\r\n            span style = {\r\n                { color: \"red\" }\r\n            } > { this.state.errors[\"email\"] } < /span>\r\n\r\n            <\r\n            /div > <\r\n            div > <\r\n            label htmlFor = \"password\" >\r\n            Password <\r\n            /label>\r\n\r\n            <\r\n            input type = \"password\"\r\n            id = \"password\"\r\n            placeholder = \"enter password\"\r\n            required\r\n\r\n            /\r\n            >\r\n            <\r\n            /\r\n            div > < div >\r\n            <\r\n            label / >\r\n            <\r\n            button className = \"primary\"\r\n            type = \"submit\" > Register < /\r\n            button > < /\r\n            div >\r\n            <\r\n            div >\r\n            <\r\n            label / >\r\n            <\r\n            div >\r\n            Already have an account ? <\r\n            Link to = \"/signin\" > Sign In < /Link> < /\r\n            div > <\r\n            /div>\r\n\r\n\r\n            <\r\n            /\r\n            form >\r\n\r\n            <\r\n            /div>\r\n        )\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default RegisterScreen;"]},"metadata":{},"sourceType":"module"}